#! /bin/sh
### BEGIN INIT INFO
# Provides:          redis-server
# Required-Start:    $syslog
# Required-Stop:     $syslog
# Should-Start:      $local_fs
# Should-Stop:       $local_fs
# Default-Start:     2 3 4 5
# Default-Stop:      0 1 6
# Short-Description: redis-server - Generator: m4ed fabfile
# Description:       redis-server - Generator: m4ed fabfile
### END INIT INFO

PATH=/sbin:/usr/sbin:/bin:/usr/bin
DESC=redis-server
USER=[[redis_user]]
DAEMON=[[init_sbin_path]][[init_name]]
CONFFILE=[[init_conf_path]]
DAEMON_ARGS="$CONFFILE"
NAME=[[init_name]]
PIDFILE=[[init_pid_path]]
SCRIPTNAME=[[init_script_name]]

[ -x $DAEMON ] || exit 0

. /lib/init/vars.sh

. /lib/lsb/init-functions

do_start()
{
    touch $PIDFILE
    chown $USER:$USER $PIDFILE
    start-stop-daemon --start -b -m --quiet --chuid $USER:$USER --pidfile $PIDFILE --exec $DAEMON -- $DAEMON_ARGS
    RETVAL="$?"
    return "$RETVAL"
}

do_stop()
{
    # Return
    #   0 if daemon has been stopped
    #   1 if daemon was already stopped
    #   2 if daemon could not be stopped
    #   other if a failure occurred
    start-stop-daemon --stop --retry 5 --oknodo --quiet --pidfile $PIDFILE --name $NAME
    RETVAL="$?"
    if [$RETVAL = 0];then
     rm -f $PIDFILE
    fi
    return "$RETVAL"
}

case "$1" in
    start)
        [ "$VERBOSE" != no ] && log_daemon_msg "Starting $DESC " "$NAME"
        do_start
        case "$?" in
            0|1) [ "$VERBOSE" != no ] && log_end_msg 0 ;;
            2) [ "$VERBOSE" != no ] && log_end_msg 1 ;;
        esac
        ;;
    stop)
        [ "$VERBOSE" != no ] && log_daemon_msg "Stopping $DESC" "$NAME"
        do_stop
        case "$?" in
            0|1) [ "$VERBOSE" != no ] && log_end_msg 0 ;;
            2) [ "$VERBOSE" != no ] && log_end_msg 1 ;;
        esac
        ;;
    status)
        status_of_proc "$DAEMON" "$NAME" && exit 0 || exit $?
        ;;
    restart)
        log_daemon_msg "Restarting $DESC" "$NAME"
        do_stop
        case "$?" in
            0|1)
                do_start
                case "$?" in
                    0) log_end_msg 0 ;;
                    1) log_end_msg 1 ;; # Old process is still running
                    *) log_end_msg 1 ;; # Failed to start
                esac
                ;;
            *)
                # Failed to stop
                log_end_msg 1
                ;;
        esac
        ;;
    *)
        echo "Usage: $SCRIPTNAME {start|stop|status|restart}" >&2
        exit 3
        ;;
esac

exit $RETVAL
